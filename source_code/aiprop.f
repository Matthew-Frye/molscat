      SUBROUTINE AIPROP(NCH,MXLAM,NHAM,
     1                  Z,TMAT,W,VL,IV,EINT,CENT,P,
     2                  Y1,Y2,Y4,VECNOW,VECNEW,
     3                  EIGOLD,EIGNOW,HP,
     4                  RSTART,RSTOP,NSTEP,DRNOW,POWR,TOLHI,NODES,
     5                  ERED,EP2RU,CM2RU,RSCALE,IPRINT,IREC,WAVE)
C  Copyright (C) 2022 J. M. Hutson & C. R. Le Sueur
C  Distributed under the GNU General Public License, version 3
C
C  AUTHOR:  MILLARD ALEXANDER
C  CURRENT REVISION DATE: 4-FEB-1991
C
C  AIRY ZEROTH-ORDER PROPAGATOR FROM R=RSTART TO R=RSTOP
C  FOR REFERENCE SEE M. ALEXANDER, "HYBRID QUANTUM SCATTERING
C                    ALGORITHMS ..." J. CHEM. PHYS. 81, 4510 (1984)
C                AND M. ALEXANDER AND D. MANOLOPOULOS, "A STABLE LINEAR
C                    REFERENCE POTENTIAL ALGORITHM FOR SOLUTION ..."
C                    J. CHEM. PHYS. 86, 2044 (1987)
C ----------------------------------------------------------------------
C  ADAPTED TO MOLSCAT 4/91 BY TRP@NASAGISS
C  ADAPTED TO MOLSCAT VERSION 11 BY JMH, JUN 92
C  ADAPTED TO WORK WITH BOUND AS WELL AS MOLSCAT BY JMH, NOV 06
C  ADAPTED TO INCLUDE WAVEFUNCTION GENERATION CODE BY CRLS, DEC 20
C-----------------------------------------------------------------------
C  DEFINITION OF VARIABLES IN CALL LIST:
C   Z:               MATRIX OF MAXIMUM DIMENSION NCH*NCH
C                    ON ENTRY Z CONTAINS THE INITIAL LOG-DERIVATIVE MATRIX
C                               AT R=RSTART IN THE FREE BASIS
C                    ON RETURN Z CONTAINS THE LOG-DERIVATIVE MATRIX AT R=RSTOP
C   W, TMAT, VECNOW
C    , VECNEW:       SCRATCH MATRICES OF DIMENSION AT LEAST NCH*NCH
C  EIGOLD, EIGNOW
C    , HP, Y1, Y2
C    , Y4:           SCRATCH VECTORS OF DIMENSION AT LEAST NCH
C  XF:               ON ENTRY: CONTAINS INITIAL VALUE OF INTERPARTICLE
C                              DISTANCE
C                    ON EXIT:  CONTAINS FINAL VALUE OF INTERPARTICLE
C                              DISTANCE
C                              THIS IS EQUAL TO RSTOP IF NORMAL
C                              TERMINATION
C                              OTHERWISE AN ERROR MESSAGE IS PRINTED
C  DRNOW:            ON ENTRY:  CONTAINS INITIAL INTERVAL SIZE
C                    ON EXIT:  CONTAINS FINAL INTERVAL SIZE
C  ERED:             INTERACTION ENERGY IN ATOMIC UNITS
C  TOLHI:            PARAMETER TO DETERMINE STEP SIZES
C                    IF 0 < TOLHI < 1, THEN ESTIMATED ERRORS ARE USED TO
C                    DETERMINE NEXT STEP SIZES FOLLOWING THE PROCEDURE
C                    OUTLINED IN M.H. ALEXANDER, "HYBRID QUANTUM SCATTERING
C                    ALGORITHMS ..."
C                    IF TOLHI = 0, THEN STEP SIZES ARE CALCULATED FROM
C                    AN ARITHMETIC SERIES IN R**1/POWR
C  POWR:             POWER AT WHICH STEP SIZES INCREASE
C
C
C  LOGICAL VARIABLES:
C     ISYM:         IF .TRUE., PROPAGATION ASSUMES SYMMETRY OF Y MATRIX
C ----------------------------------------------------------------------
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)
      LOGICAL ISYM,LAST
C
C  COMMON BLOCK FOR CONTROL OF USE OF PROPAGATION SCRATCH FILE
      LOGICAL IREAD,IWRITE,IREADR,IWRITR
      COMMON /PRPSCR/ ESHIFT,ISCRU,ISCRUR,IREAD,IWRITE,IREADR,IWRITR
C
      INTEGER I, IEND, KOUNT, IZERO, KSTEP, MAXSTP,
     :        NCH, NPT, NSKIP, NODES
      EXTERNAL CORR, TRNSFM, POTENT, DAXPY, DCOPY,
     :         SYMINV, SPROPN, DSCAL, TRNSP, WAVEIG
C  MATRIX DIMENSIONS (ROW DIMENSION = NCH, MATRICES STORED COLUMN BY COLUMN
      DIMENSION Z(*), W(1), TMAT(NCH,NCH), VECNOW(NCH,NCH),
     1          VECNEW(NCH,NCH)
C  VECTORS DIMENSIONED NCH
      DIMENSION EIGOLD(NCH), EIGNOW(NCH), HP(1), Y1(*), Y2(*), Y4(*)
      DIMENSION P(1),VL(1),IV(1),EINT(1),CENT(1)

C EXTRA VARIABLES NEEDED FOR WAVEFUNCTION GENERATION
      LOGICAL WAVE
      ALLOCATABLE :: WKS1(:,:),WKS2(:,:)
C  COMMON BLOCK TO DESCRIBE WHICH DRIVER IS USED
      CHARACTER(1) CDRIVE
      COMMON /CNTROL/ CDRIVE

C  COMMON BLOCK FOR INPUT/OUTPUT CHANNEL NUMBERS
      LOGICAL IWAVEF
      COMMON /IOCHAN/ IPSISC,IWAVSC,IWAVE,NWVCOL,IWVSTP,IWAVEF

      DATA IZERO, IONE, ZERO, ONE /0, 1, 0.D0, 1.D0/
      DATA ISYM /.TRUE./
C
C ----------------------------------------------------------------------
C
      IF (WAVE) ALLOCATE (WKS1(NCH,NCH),WKS2(NCH,NCH))

      DRNORM = DRNOW
      NODES = 0
      SPCMX = 0.D0
      SPCMN = ABS(RSTOP - RSTART)
C  DETERMINE LOCAL WAVEVECTORS AT RSTART TO USE IN ESTIMATING SECOND
C  DERIVATIVES.  HP IS USED AS A SCRATCH VECTOR HERE
      CALL WAVEIG(W, EIGOLD, HP, RSTART, NCH, P, MXLAM, VL,
     1            IV, EP2RU, CM2RU, RSCALE, ERED, EINT, CENT, NHAM,
     2            IPRINT)
C  LOCAL WAVEVECTORS AT RSTART ARE RETURNED IN EIGOLD
C
C  ORIGINAL MAXSTP FORMULA CAN OVERFLOW SO HARD-CODE IT. JMH 8/2012
C     MAXSTP = ( (RSTOP-XF) / DRNOW ) * 20
      MAXSTP = 500000
      IF (IWRITE) THEN
        WRITE(ISCRU) ERED
        ESHIFT=0.D0
      ELSEIF (IREAD) THEN
        READ(ISCRU) EFIRST
        ESHIFT=ERED-EFIRST
      ENDIF
C
C  FOR EACH SECTOR RLAST AND RNEXT ARE THE ENDPOINTS OF THE SECTOR, RNOW
C  IS THE MIDPOINT, DRNOW IS THE WIDTH
      DRMID = DRNOW * 0.5D0
      RLAST = RSTART
      RNOW = RLAST + DRMID
      RNEXT = RLAST + DRNOW
C
C  INITIALIZE VARIABLES FOR TRACKING ACCURACY CRITERIA
C
      NDIAG=0
      NOFF=0
      CDMAX=0.D0
      COMAX=0.D0
      LAST=.FALSE.
      IF (IPRINT.GE.20 .AND. IWRITE) THEN
        WRITE(6, 40)
   40   FORMAT(/'  ** AIRY PROPAGATION (NO DERIVATIVES):')
        WRITE(6, 50)
   50   FORMAT('   STEP',4X,'RNOW',7X,'DRNOW',6X,'CDIAG',7X,'COFF')
      ENDIF
C
C  START AIRY PROPAGATION
C
      DO 200  KSTEP = 1, MAXSTP
        CALL INMAT(TMAT, EIGNOW, HP, DRNOW, RNOW, NCH, NCH, LAST)
        IF (.NOT.IREAD) THEN
          IF (KSTEP.EQ.1) THEN
            CALL POTENT(W, VECNOW, VECNEW, EIGNOW, HP, Y1, RNOW, DRNOW,
     1                  XLARGE, NCH, P, MXLAM, VL, IV, EP2RU, CM2RU,
     2                  RSCALE, ERED, EINT, CENT, NHAM, IPRINT)
            CALL DCOPY(NCH*NCH,VECNOW,1,TMAT,1)
C  TMAT NOW CONTAINS T^{PRIMITIVE,CURR-LOCAL}
          ELSE
            CALL POTENT(W, VECNEW, TMAT, EIGNOW, HP, Y1, RNOW, DRNOW,
     1                  XLARGE, NCH, P, MXLAM, VL, IV, EP2RU, CM2RU,
     2                  RSCALE, ERED, EINT, CENT, NHAM, IPRINT)
            CALL DGEMUL(VECNEW,NCH,'N',VECNOW,NCH,'T',TMAT,
     1                  NCH,NCH,NCH,NCH)
C  TMAT NOW CONTAINS T^{PREV-LOCAL,CURR-LOCAL}
            CALL DCOPY(NCH*NCH,VECNEW,1,VECNOW,1)
C  VECNOW CONTAINS T^{CURR-LOCAL,PRIMITIVE}
          ENDIF
          CALL TRNSP(TMAT, NCH)
C  TMAT NOW CONTAINS T^{CURR-LOCAL,PREV-LOCAL}
        ENDIF
        CALL CORR(EIGNOW, EIGOLD, HP, DRNOW, DRMID, XLARGE, CDIAG,
     1            COFF, NCH)
        CALL OUTMAT(TMAT,EIGNOW,HP,DRNOW,RNOW,NCH,NCH, LAST)
C  EIGOLD NOW CONTAINS CURRENT EIGENVALUES (EIGNOW)
C
C  TRANSFORM LOG-DERIV MATRIX FROM LOCAL BASIS IN LAST INTERVAL TO
C  LOCAL BASIS IN PRESENT INTERVAL.  SEE EQ.(23) OF
C  M.H. ALEXANDER, "HYBRID QUANTUM SCATTERING ALGORITHMS ..."
C  W IS USED AS SCRATCH MATRIX HERE, AND Y1 IS SCRATCH ARRAY
C
        CALL TRNSFM(TMAT, Z, W, NCH, .FALSE., ISYM )
C  Z NOW CONTAINS T^{CURR-LOCAL,PREV-LOCAL}*Z*T^{PREV-LOCAL,CURR-LOCAL}
C  I.E. Z EXPRESSED IN CURRENT LOCAL BASIS
C
C  SOLVE FOR LOG-DERIVATIVE MATRIX AT RIGHT-HAND SIDE OF
C  PRESENT INTERVAL.  THIS USES NEW ALGORITHM OF
C  MANOLOPOULOS AND ALEXANDER, NAMELY
C               (N)    (N)      -1   (N)      (N)
C     Z    = - Y    [ Y    + Z ]    Y     +  Y
C      N+1      2      1      N      2        4
C  WHERE Y  , Y  , AND Y   ARE THE (DIAGONAL) ELEMENTS OF THE "IMBEDDING
C         1    2        4
C  PROPAGATOR DEFINED IN ALEXANDER AND MANOLOPOULOS
C  DETERMINE THESE DIAGONAL MATRICES FOR PROPAGATION OF LOG-DERIV MATRIX
C  EQS. (38)-(44) OF M. ALEXANDER AND D. MANOLOPOULOS, "A STABLE LINEAR
C                    REFERENCE POTENTIAL ALGORITHM FOR SOLUTION ..."
C
        CALL SPROPN(DRNOW, EIGOLD, HP, Y1, Y4, Y2, NCH)
C
C  SET UP MATRIX TO BE INVERTED
C  NSKIP IS SPACING BETWEEN DIAGONAL ELEMENTS OF MATRIX
C
        NSKIP = NCH + 1
        CALL DAXPY(NCH, ONE, Y1, 1, Z, NSKIP)
C
C  INVERT (Y  +  Z )
C           1     N
C
        CALL SYMINV(Z, NCH, NCH, KOUNT)
C
C  ACCUMULATE NODE COUNT
C
        IF (RSTOP.GT.RSTART) THEN
          NODES=NODES+KOUNT
        ELSE
          NODES=NODES+NCH-KOUNT
        ENDIF
        CALL DSYFIL('U', NCH, Z, NCH)
        IF (KOUNT.GT.NCH) THEN
          WRITE(6, 80)
   80     FORMAT('  *** INSTABILITY IN SYMINV IN AIPROP.')
          STOP
        ENDIF
C                            -1
C  EVALUATE  - Y  ( Y  + Z )    Y
C               2    1    N      2
C  IN THE NEXT LOOPS, EVALUATE THE FULL, RATHER THAN LOWER TRIANGLE
C
        NPT = 1
        DO 85  I = 1, NCH
          FACT = Y2(I)
          CALL DSCAL(NCH, FACT, Z(NPT), 1)
          NPT = NPT + NCH
   85   CONTINUE
C                            -1
C  Z NOW CONTAINS ( Y  + Z )    Y  , THIS IS G(N-1,N) IN THE LOCAL BASIS
C                     1    N      2
        IF (WAVE) THEN
          CALL DCOPY(NCH**2,Z,1,WKS1,1)
          CALL TRNSFM(VECNOW,WKS1,WKS2,NCH,.FALSE.,.FALSE.)
          WRITE(IWAVSC,REC=IREC,IOSTAT=IERR,ERR=999) RLAST,WKS1
          IREC=IREC+1
        ENDIF
C
        DO 110  I = 1, NCH
          FACT = - Y2(I)
          CALL DSCAL(NCH, FACT, Z(I), NCH)
  110   CONTINUE
C
C  ADD ON  Y
C           4
        CALL DAXPY(NCH, ONE, Y4, 1, Z, NSKIP)
C
        CDMAX=MAX(CDIAG,CDMAX)
        COMAX=MAX(COFF,COMAX)
C
C  PRINT ANY WARNINGS ABOUT CDIAG AND COFF
C
        IF (TOLHI.GT.0.D0 .AND. IWRITE) THEN
          IF (CDIAG.GT.5.D0*TOLHI) THEN
            NDIAG=NDIAG+1
            IF (IPRINT.GE.13) WRITE(6,120) 'CDIAG',
     1                                      CDIAG,KSTEP,RNOW,DRNOW
  120       FORMAT('  AIPROP: ESTIMATED CORRECTION ',A,' =',1PE11.4,
     1             ' LARGER THAN 5*TOLHI AT STEP',I6,
     2             ', R = ',E11.4,', DR = ',E11.4)
          ENDIF
          IF (COFF.GT.5.D0*TOLHI ) THEN
            NOFF=NOFF+1
            IF (IPRINT.GE.13) WRITE(6,120) ' COFF',
     1                                       COFF,KSTEP,RNOW,DRNOW
          ENDIF
          IF (KSTEP.EQ.1 .AND. IPRINT.GE.5 .AND.
     1       ((CDIAG.GT.5.D0*TOLHI) .OR. (COFF.GT.5.D0*TOLHI)))
     2       WRITE(6,130)
  130        FORMAT(5X,'AIPROP: CDIAG OR COFF > 5*TOLHI AT FIRST STEP.',
     1              '  INITIAL VALUE OF DR IS PROBABLY TOO LARGE')
        ENDIF
C
C  WRITE INFORMATION ON STEP JUST COMPLETED
C
        IF (IPRINT.GE.20 .AND. IWRITE) THEN
          WRITE(6,150) KSTEP, ABS(RNOW), DRNOW, CDIAG, COFF
  150     FORMAT(I7, 4(1PE12.4))
        ENDIF

        IF (LAST) EXIT
        IF (IREAD .OR. IREADR) CYCLE
C
C  GET SET FOR NEXT STEP
C
C  IF TOLHI .LT. 1, PREDICT NEXT STEP SIZE FROM LARGEST CORRECTION
C
        DROLD=DRNOW
        IF (TOLHI.GT.0.D0 .AND. TOLHI.LT.1.D0) THEN
C
C  NOTE THAT THE FOLLOWING ALGORITHM IS SLIGHTLY DIFFERENT FROM EQ. (30)
C  OF M.H. ALEXANDER, "HYBRID QUANTUM SCATTERING ALGORITHMS ..."
C  AND THAT THE STEP-SIZE ALGORITHM IS ONLY APPROXIMATELY RELATED TO
C  ANY REAL ESTIMATE OF THE ERROR
C  COFF AND CDIAG SHOULD BE APPROXIMATELY TOLHI, SO FROM EQ. (27):
C  DRNOW(AT N+1) = (12 TOLHI/KBAR(N+1)W(N+1)-TILDA')**(1/3)
C  WHICH IS APPROX = (12 TOLHI/KBAR(N)W(N)-TILDA')**(1/3)
C                  = ((12 COFF/KBAR W-TILDA') (TOLHI/COFF))**(1/3)
C                  = DRNOW(AT N) (TOLHI/COFF)**(1/3)
C  OR FROM EQ. (29):
C                   DRNOW = DRNOW (TOLHI/CDIAG)**(1/3)
C
C  ALEXANDER STEP-SIZE ALGORITHM IS
          CMAX = MAX(ABS(CDIAG), ABS(COFF))
          FACTOR=(TOLHI/CMAX)**(1.D0/POWR)
C  NEED TO BE TAKE ACCOUNT OF INCREASING POTENTIAL FOR INWARDS PROPAGATION
C  THE POWER 3 IS ARBITRARY HERE:
C  IT NEEDS TO BE AT LEAST (N+2)/3 FOR A 1/R**N POTENTIAL
          IF (DRNOW.LT.0.D0 .AND. RNEXT+DRNOW.GT.0.D0)
     1       FACTOR=FACTOR*(1.D0+DRNOW/RNEXT)**3
C  LIMIT INCREMENT FOR STABILITY (BUT NOT DECREMENT)
          IF (FACTOR.GT.2.D0) FACTOR=2.D0
          DRNOW = DRNOW * FACTOR

          RLAST = RNEXT
          RNEXT = RNEXT + DRNOW
          LAST = ((RSTOP-RSTART)*(RSTOP-RNEXT).LT.0.D0)
C
        ELSEIF (TOLHI.EQ.0.D0) THEN
C
C  IF TOLHI = 0, CALCULATE NEXT STEP FROM ARITHMETIC SERIES IN R**1/POWR
C
          DRNOW=DRCALC(RSTART,RSTOP,KSTEP,NSTEP,POWR)

          RLAST = RNEXT
          RNEXT = RNEXT + DRNOW
          LAST = (NSTEP-KSTEP.LE.1)
        ENDIF
C
C  DRNOW IS STEP SIZE IN NEXT INTERVAL:
C
        IF (LAST) THEN
          RNEXT = RSTOP
          DRNOW = RNEXT - RLAST
        ENDIF
        RNEW = RLAST + 0.5D0 * DRNOW
        IF (KSTEP.GT.1 .AND. .NOT.LAST) THEN
          IF (ABS(DRNOW).LT.SPCMN) SPCMN = ABS(DRNOW)
          IF (ABS(DRNOW).GT.SPCMX) SPCMX = ABS(DRNOW)
        ENDIF
        DRMID = RNEW - RNOW
C
        RNOW = RNEW
C
C  GO BACK TO START NEW STEP
C
  200 CONTINUE
      IF (WAVE) DEALLOCATE (WKS1,WKS2)
C
C  THE FOLLOWING STATEMENT IS REACHED ONLY IF THE PROPAGATION HAS
C  NOT REACHED THE ASYMPTOTIC REGION IN MAXSTP STEPS
C
      IF (.NOT.LAST) WRITE(6,210) MAXSTP, RLAST
  210 FORMAT('  *** AIRY PROPAGATION NOT FINISHED IN', I9,
     :       ' STEPS:  R-FIN SET TO', 1PG11.3,' ***',/)
      NSTEP=KSTEP
      DRNOW=DROLD
      CALL INMAT(VECNOW, EIGOLD, HP, DRNOW, RSTOP, NCH, NCH, LAST)
      CALL OUTMAT(VECNOW, EIGOLD, HP, DRNOW, RSTOP, NCH, NCH, LAST)
C
C  TRANSFORM LOG-DERIV MATRIX INTO FREE BASIS.  TRANSFORMATION MATRIX IS
C  JUST VECNOW-TRANSPOSE; SEE EQ.(24) OF M.H. ALEXANDER, "HYBRID QUANTUM
C  SCATTERING ALGORITHMS ..."
C
      CALL TRNSFM(VECNOW, Z, W, NCH, .FALSE., ISYM )
C
      IF (IPRINT.GE.12) THEN
        IF (TOLHI.EQ.0.D0) THEN
          WRITE(6,290) CDMAX,COMAX
  290     FORMAT('  AIRY: MAX VALUES OF ERROR ESTIMATES ARE CDIAG =',
     1           1PE11.4,' AND COFF =',1PE11.4)
        ELSEIF (NDIAG.GT.0 .OR. NOFF.GT.0) THEN
          WRITE(6,300) NDIAG,CDMAX,NOFF,COMAX
  300     FORMAT('  AIRY: 5*TOLHI EXCEEDED',I5,
     1           ' TIMES BY CDIAG WITH MAX VALUE',1PE11.4/21X,'AND',I5,
     2           ' TIMES BY COFF  WITH MAX VALUE',1PE11.4)
          IF (NOFF.GT.0) WRITE(6,310)
  310     FORMAT('  COFF >> TOLHI IS USUALLY CAUSED BY A SHARP AVOIDED',
     1           ' CROSSING BETWEEN ADIABATS'/'  BUT CAN BE DUE TO A'
     2           ' SHARP CHANGE IN THE POTENTIAL OR ITS DERIVATIVE.')
        ENDIF
      ENDIF
      IF (IPRINT.GE.13) THEN
        WRITE(6, 320) SPCMN, SPCMX
  320   FORMAT(/'  AIRY.   DRMIN =', 0PF10.4, '   DRMAX =', 1PG11.3)
      ENDIF
      RETURN
  999 WRITE(6,1000) IREC,IERR
 1000 FORMAT(/' ***** AIPROP: ERROR WRITING TO WAVEFUNCTION FILE',2I6)
      END
