      SUBROUTINE WVHEAD(LABEL,ITYPE,IBOUND,NQN,URED,MUNIT,RUNIT,
     1                  EUNIT,CONLEN,RUNAME,EUNAME,EREF,IPRINT,IREF,
     2                  MONQN)
C  Copyright (C) 2022 J. M. Hutson & C. R. Le Sueur
C  Distributed under the GNU General Public License, version 3
      USE efvs, ONLY: EFV, EFVNAM, EFVUNT, IEFVST, ISVEFV, ITPSUB,
     e                NEFV, NEFVP
      IMPLICIT NONE
      SAVE
C  THIS SUBROUTINE AND ITS ENTRY POINTS WRITE OUT INFORMATION REQUIRED
C  FOR WAVEFUNCTIONS
C
C  WRITTEN BY CRLS 11-11-2016
C  UPDATED BY CRLS 04-03-2020

C  INPUTS FOR WVHEAD
      INTEGER,          INTENT(IN) :: ITYPE,IBOUND,IPRINT,IREF,MONQN,NQN
      CHARACTER(80),    INTENT(IN) :: LABEL
      DOUBLE PRECISION, INTENT(IN) :: URED,MUNIT,RUNIT,EUNIT,CONLEN,EREF
      CHARACTER(8),     INTENT(IN) :: EUNAME,RUNAME

C  INPUTS FOR WVSBLK
      INTEGER,          INTENT(IN) :: JTOT,IBLOCK,NBASIS,NSTATE,
     1                                JSTATE,JSINDX,L,NSETS
      DOUBLE PRECISION, INTENT(IN) :: CENT
      CHARACTER(8),     INTENT(IN) :: QNAME(10)
      CHARACTER(*),     INTENT(IN) :: SETNAM
      DIMENSION                    :: JSTATE(NSTATE,NQN),JSINDX(NBASIS),
     1                                L(NBASIS),CENT(NBASIS)

C  INPUTS FOR WVSETS
      INTEGER,          INTENT(IN) :: ISET,ISTONE,ISTEND
      DOUBLE PRECISION, INTENT(IN) :: ENERGY

C  INPUTS FOR WVCURR
      INTEGER,          INTENT(IN) :: ISTATE
      DOUBLE PRECISION, INTENT(IN) :: ENOW

C  INPUTS FOR WVGRID
      DOUBLE PRECISION, INTENT(IN) :: DRSEG(3),RBSEG(3),RESEG(3)
      INTEGER,          INTENT(IN) :: IPRSEG(3),NSEG,NPOINT

C  COMMON BLOCK FOR INPUT/OUTPUT CHANNEL NUMBERS
      COMMON /IOCHAN/ IPSISC,IWAVSC,IWAVE,NWVCOL,IWVSTP,IWAVEF
      LOGICAL IWAVEF
      INTEGER IPSISC,IWAVSC,IWAVE,NWVCOL,IWVSTP

C  COMMON BLOCK TO DESCRIBE WHICH DRIVER IS USED
      COMMON /CNTROL/ CDRIVE
      CHARACTER(1) CDRIVE

C  INTERNAL VARIABLES
      CHARACTER(1) PLUR(0:2)
      CHARACTER(2) NCOL,ORDNL
      CHARACTER(3) YPLUR(0:2)
      CHARACTER(22) FBLANK,FQNAME,FLNAME,FQVAL,FLVAL
      CHARACTER(70) F100,F101
      CHARACTER(7) NPROGM
      CHARACTER(8) WAVEOF
      LOGICAL ERFIX,ERZERO

      INTEGER JQN,IBASIS,ISEG,IEFV,LENEFV,NBDST,ICHAN,ISTBEG,NWVFUN

      DATA PLUR/'S',' ','S'/
      DATA YPLUR/'IES','Y','IES'/
      DATA WAVEOF/'beta20'/

C  SCATTERING WAVEFUNCTIONS ARE COMPLEX, SO HALVE THE NUMBER OF COLUMNS
C  IN THE WAVEFUNCTION FILE
      NWVFUN=NWVCOL
      IF (CDRIVE.EQ.'M') THEN
        NPROGM='MOLSCAT'
        NWVFUN=NWVFUN/2
      ELSEIF (CDRIVE.EQ.'F') THEN
        NPROGM='FIELD'
      ELSEIF (CDRIVE.EQ.'B') THEN
        NPROGM='BOUND'
      ENDIF

C  CHECK STATUS OF EREF
      ERFIX=(IREF.EQ.0 .AND. MONQN.EQ.-99999)
      ERZERO=(ERFIX .AND. EREF.EQ.0.D0)

C  OPEN UNIT FOR STORING WAVEFUNCTIONS
      IF (IWAVEF) THEN
        CLOSE(IWAVE)
        OPEN(UNIT=IWAVE,STATUS='UNKNOWN',ACCESS='SEQUENTIAL',
     1       FORM='FORMATTED')
      ELSE
        CLOSE(IWAVE)
        OPEN(UNIT=IWAVE,STATUS='UNKNOWN',ACCESS='SEQUENTIAL',
     1       FORM='UNFORMATTED')
      ENDIF
      WRITE(6,100) IWAVE
  100 FORMAT(/'  WAVEFUNCTIONS REQUESTED AND WRITTEN TO',
     1        ' FILE ON UNIT ',I3)

      LENEFV=MAX(NEFVP-IEFVST+1,0)
      IF (IPRINT.GE.1 .AND. LENEFV.GT.0 .AND. .NOT.IWAVEF)
     1  WRITE(6,110) 'HEADER ON WAVEFUNCTION FILE CONTAINS ',
     2                'THE FOLLOWING VARIABLES: ',
     3                (TRIM(EFVNAM(IEFV)),IEFV=IEFVST,NEFVP)
  110   FORMAT(2X,A,A,(A:,', '))

C  WRITE HEADER WHICH GOES ONCE AT THE TOP OF THE WAVEFUNCTION FILE
      IF (IWAVEF) THEN
        WRITE(IWAVE,1010) 'CALCULATION FROM ',NPROGM,
     1                   ' OUTPUT FORMAT ',WAVEOF
 1010   FORMAT('# ',A,A:,A,A)
        WRITE(IWAVE,1010) '# RUN LABEL: ',TRIM(LABEL)
        IF (MUNIT.NE.1.D0)
     1    WRITE(IWAVE,1020) 'MASS   UNIT: ','          ',
     2                     MUNIT,' DALTON'
        WRITE(IWAVE,1020) 'LENGTH UNIT: ',RUNAME,RUNIT,' ANGSTROM'
        WRITE(IWAVE,1020) 'ENERGY UNIT: ',EUNAME,EUNIT,' CM-1'
 1020   FORMAT('# ',A,A8,' = ',1P,G20.13,A)
        WRITE(IWAVE,1030) 'REDUCED MASS:                 ',URED
 1030   FORMAT('# ',A,1P,G20.13)
        IF (CONLEN.GT.0.D0) WRITE(IWAVE,1030)
     1                      'SPHERICAL CONFINEMENT LENGTH: ',CONLEN
        WRITE(IWAVE,1040) 'IBOUND:        ',IBOUND
        WRITE(IWAVE,1040) 'ITYPE:         ',ITYPE
 1040   FORMAT('# ',A,I5)
        IF (ITYPE.EQ.9) WRITE(IWAVE,1040) 'ITYPE SUBTYPE: ',ITPSUB
        IF (IWVSTP.GT.1) THEN
          WRITE(IWAVE,1050) 'WAVEFUNCTION IS WRITTEN OUT AT ',
     1                     'FIRST POINT AND THEN EVERY ',IWVSTP,
     2                     ORDNL(IWVSTP),' POINT THEREAFTER'
 1050     FORMAT('# ',A,A,I8,A,A)
        ELSEIF (IWVSTP.EQ.-2) THEN
          WRITE(IWAVE,1060) 'WAVEFUNCTION IS WRITTEN OUT AT '//
     1                     'RMAX ONLY'
 1060     FORMAT('# ',A)
        ENDIF
        WRITE(IWAVE,1040) 'NUMBER OF QUANTUM NUMBERS, ',NQN-1
      ELSE
        WRITE(IWAVE) WAVEOF
        WRITE(IWAVE) LABEL,ITYPE,ITPSUB,IBOUND,NQN,URED
        WRITE(IWAVE) MUNIT,RUNIT,EUNIT,CONLEN
        WRITE(IWAVE) NEFV,ISVEFV,(EFVNAM(IEFV),EFVUNT(IEFV),IEFV=1,NEFV)
        WRITE(IWAVE) IWVSTP
      ENDIF

      RETURN
C =========================================================== END OF WVHEAD
      ENTRY WVSBLK(JTOT,IBLOCK,NBASIS,NQN,NSTATE,JSTATE,
     1             JSINDX,L,CENT,EREF,
     2             EUNIT,EUNAME,QNAME,IBOUND,IPRINT,NSETS,SETNAM)
C  INFORMATION FOR INTERPRETING WAVEFUNCTIONS FOR CURRENT SYMMETRY BLOCK
C  - JTOT, IBLOCK, QUANTUM LABELS FOR BASIS FUNCTIONS

      WRITE(NCOL,'(I2)') MIN(NBASIS,NWVFUN)
      NCOL=ADJUSTR(NCOL)
C  THE LENGTHS OF STRINGS PRODUCED BY THE PARTIAL FORMAT STRINGS FQNAME,
C  FLNAME AND FBLANK MUST MATCH THE SPACE ALLOWED FOR PRINTING R IN F2000 IN
C  BDCTRL/F990 IN SCWAVE, WHICH IS 16 AT THE MOMENT
      FBLANK='"#",15X,'
      FQNAME='"# ",A8," :",4X,'
      IF (IBOUND.EQ.0) THEN
        FLNAME='"#        L :",1P,4X,'
      ELSE
        FLNAME='"#   <L**2> :",1P,4X,'
      ENDIF
C  THE LENGTHS OF OUTPUT PRODUCED BY THE PARTIAL FORMAT STRINGS FQVAL AND
C  FLVAL MUST MATCH THE SPACE ALLOWED FOR PRINTING WAVEFUNCTION VALUES IN
C  F2000 IN BDCTRL/F990 IN SCWAVE, WHICH IS 16 AT THE MOMENT
      FQVAL=NCOL//'(I3:,13X'
      IF (IBOUND.EQ.0) THEN
        FLVAL=FQVAL
      ELSE
        FLVAL=NCOL//'(G13.6:,3X'
      ENDIF
      IF (CDRIVE.NE.'M') THEN
        FQVAL=TRIM(FQVAL)//')'
        FLVAL=TRIM(FLVAL)//')'
      ELSE
        FQVAL=TRIM(FQVAL)//',16X)'
        FLVAL=TRIM(FLVAL)//',16X)'
      ENDIF
      F100='('//TRIM(FQNAME)//TRIM(FQVAL)//',/('//TRIM(FBLANK)//
     1          TRIM(FQVAL)//'))'
      F101='('//TRIM(FLNAME)//TRIM(FLVAL)//',/('//TRIM(FBLANK)//
     1          TRIM(FLVAL)//'))'

C  WRITE A HEADER FOR THIS PARTICULAR SYMMETRY BLOCK
      IF (IWAVEF) THEN
        WRITE(IWAVE,2010) JTOT,IBLOCK,NBASIS
 2010   FORMAT('# JTOT, IBLOCK, NBASIS: ',2I4,I5)

        IF (NBASIS.GT.NWVFUN) THEN
          WRITE(IWAVE,2020) 'AT EACH R, COMPONENTS OF WAVEFUNCTION ',
     1                     'VECTOR OCCUPY ',(NBASIS-1)/NWVFUN+1,' LINES'
 2020     FORMAT('# ',A,A,I3,A)
        ENDIF
        IF (ERFIX .AND. .NOT.ERZERO)
     1    WRITE(IWAVE,2030) EREF/EUNIT,TRIM(EUNAME)
 2030   FORMAT('# REFERENCE ENERGY IS FIXED AS ',1P,G20.13,1X,A)

C  WRITE THE BASIS FUNCTION QUANTUM NUMBERS
        DO JQN=1,NQN-1
          WRITE(IWAVE,FMT=F100) ADJUSTR(QNAME(JQN)),
     1                         (JSTATE(JSINDX(IBASIS),JQN),
     2                                        IBASIS=1,NBASIS)
        ENDDO
        IF (IBOUND.EQ.0) THEN
          WRITE(IWAVE,FMT=F101) (L(IBASIS),IBASIS=1,NBASIS)
        ELSE
          WRITE(IWAVE,FMT=F101) (CENT(IBASIS),IBASIS=1,NBASIS)
        ENDIF

C  INFORMATION ABOUT HOW MANY SETS OF EFVS (ENERGIES FOR FIELD)
C  WAVEFUNCTIONS ARE CALCULATED FOR
        IF (NSETS.GT.1)
     1    WRITE(IWAVE,2040) 'WAVEFUNCTIONS CALCULATED FOR ',NSETS,
     2                     TRIM(ADJUSTL(SETNAM))
 2040   FORMAT('# ',A,I5,1X,A)

      ELSE
        WRITE(IWAVE) JTOT,IBLOCK,NBASIS

        DO JQN=1,NQN-1
          WRITE(IWAVE) (JSTATE(JSINDX(IBASIS),JQN),IBASIS=1,NBASIS)
        ENDDO
        IF (IBOUND.EQ.0) THEN
          WRITE(IWAVE) (L(IBASIS),IBASIS=1,NBASIS)
        ELSE
          WRITE(IWAVE) (CENT(IBASIS),IBASIS=1,NBASIS)
        ENDIF
        WRITE(IWAVE) NSETS
      ENDIF

      RETURN
C =========================================================== END OF WVSBLK
      ENTRY WVSETS(ENERGY,EUNIT,EUNAME,EREF,ISET,ISTONE,ISTEND)
C  INFORMATION ABOUT THE EFV VALUES (ENERGIES FOR FIELD) OF THE CURRENT
C  SET OF WAVEFUNCTIONS

      IF (IWAVEF) THEN
        IF (CDRIVE.NE.'F') THEN
          IF (LENEFV.GT.0 .AND. ERFIX) THEN
            WRITE(IWAVE,3010) 'FIELD ',ISET,': ',
     1                       (TRIM(EFVNAM(IEFV)),EFV(IEFV),
     2                        TRIM(EFVUNT(IEFV)),IEFV=IEFVST,NEFVP)
          ELSEIF (LENEFV.GT.0 .AND. .NOT.ERFIX) THEN
           WRITE(IWAVE,3010) 'FIELD ',ISET,': ',
     1                       (TRIM(EFVNAM(IEFV)),EFV(IEFV),
     2                        TRIM(EFVUNT(IEFV)),IEFV=IEFVST,NEFVP),
     3                        'REFERENCE ENERGY',EREF/EUNIT,TRIM(EUNAME)
 3010     FORMAT('# ',A,I5,A,1P,11(A,' = ',G20.13,1X,A:,', '))
          ELSEIF (.NOT.ERFIX) THEN
            WRITE(IWAVE,3020) 'REFERENCE ENERGY =',EREF/EUNIT,
     1                                            TRIM(EUNAME)
          ENDIF
 3020     FORMAT(A,1X,1P,G20.13,1X,A)
        ELSEIF (.NOT.ERFIX) THEN
          WRITE(IWAVE,3030) 'ENERGY ',ISET,': ',ENERGY,TRIM(EUNAME),
     1                     'RELATIVE TO REFERENCE ENERGY '
        ELSE
          WRITE(IWAVE,3030) 'ENERGY ',ISET,': ',ENERGY,TRIM(EUNAME)
        ENDIF
 3030     FORMAT('# ',A,I5,A,1P,G20.13,1X,A:,1X,A:,G20.13,1X,A)
      ELSE
C  FOR UNFORMATTED FILE, JUST NEED TO KNOW WHICH SET OF EFVS
C  (ENERGIES FOR FIELD)
        WRITE(IWAVE) ISET
      ENDIF

C  INFORMATION ABOUT HOW MANY BOUND STATE/SCATTERING WAVEFUNCTIONS WILL
C  BE OUTPUT FOR THE CURRENT SET OF EFVS (ENERGY FOR FIELD)

      IF (IWAVEF) THEN
        IF (CDRIVE.NE.'M') THEN
          ISTBEG=ISTONE
          NBDST=ISTEND-ISTBEG+1
          IF (NBDST.LT.1) RETURN
          IF (NBDST.GT.1) THEN
            WRITE(IWAVE,3040) 'STATES ',ISTBEG,' TO ',ISTEND,
     1                       ' ARE IN RANGE'
          ELSE
            WRITE(IWAVE,3040) 'STATE ',ISTBEG,' IS IN RANGE'
          ENDIF
 3040     FORMAT('# ',A,I5,A:,I5,A)
        ELSE
          ICHAN=ISTONE
          WRITE(IWAVE,3050) 'WAVEFUNCTION',PLUR(MIN(ISTEND,2)),
     1                     ' FOR SCATTERING CHANNEL ',ICHAN,
     2                     ' CALCULATED FOR ',ISTEND,
     3                     ' ENERG',YPLUR(MIN(ISTEND,2))
 3050     FORMAT('# ',A,A,A,I5,A,I5,A,A)
        ENDIF
      ELSE
        WRITE(IWAVE) ISTONE,ISTEND
      ENDIF

      RETURN
C =========================================================== END OF WVSETS
      ENTRY WVCURR(ISTATE,ENOW,EREF,EUNIT,EUNAME)
C  INFORMATION ABOUT THE PARTICULAR WAVEFUNCTION (ENERGY AND EITHER
C  INCOMING CHANNEL, OR STATE NUMBER)

      IF (IWAVEF) THEN
        IF (CDRIVE.EQ.'M') THEN
          IF (EREF.NE.0.D0) THEN
            WRITE(IWAVE,4010) 'SCATTERING CHANNEL ',ICHAN,
     1                       ' AT ENERGY ',(ENOW-EREF)/EUNIT,
     2                                     TRIM(EUNAME),
     3                       ' RELATIVE TO REFERENCE ENERGY '
          ELSE
            WRITE(IWAVE,4010) 'SCATTERING CHANNEL ',ICHAN,
     1                       ' AT ENERGY ',ENOW/EUNIT,TRIM(EUNAME)
          ENDIF
        ELSEIF (CDRIVE.EQ.'B') THEN
          IF (.NOT.ERFIX .OR. EREF.NE.0.D0) THEN
            WRITE(IWAVE,4010) 'WAVEFUNCTION FOR STATE ',ABS(ISTATE),
     1                       ' AT ENERGY ',
     2                       (ENOW-EREF)/EUNIT,TRIM(EUNAME),
     3                       ' RELATIVE TO REFERENCE ENERGY '
          ELSE
            WRITE(IWAVE,4010) 'WAVEFUNCTION FOR STATE ',ABS(ISTATE),
     1                       ' AT ENERGY ',ENOW/EUNIT,TRIM(EUNAME)
          ENDIF
 4010     FORMAT('# ',A,I5,A,1P,G20.13,1X,A:,1X,A:,G20.13,1X,A)
        ELSE
          IF (.NOT.ERFIX) THEN
            WRITE(IWAVE,4020) 'WAVEFUNCTION FOR STATE ',ABS(ISTATE),
     1                       ' AT ',
     2                       (TRIM(EFVNAM(IEFV)),EFV(IEFV),
     3                        TRIM(EFVUNT(IEFV)),IEFV=IEFVST,NEFVP),
     4                       'REFERENCE ENERGY ',EREF/EUNIT,TRIM(EUNAME)
          ELSE
            WRITE(IWAVE,4020) 'WAVEFUNCTION FOR STATE ',ABS(ISTATE),
     1                       ' AT ',
     2                       (TRIM(EFVNAM(IEFV)),EFV(IEFV),
     3                        TRIM(EFVUNT(IEFV)),IEFV=IEFVST,NEFVP)
          ENDIF
 4020     FORMAT('# ',A,I5,A,1P,11(A,' = ',G20.13,1X,A:,', '))
        ENDIF
        IF (ISTATE.LT.0) WRITE(IWAVE,4030)
 4030   FORMAT('# HAS NOT CONVERGED. BACK-SUBSTITUTION FOR FINAL',
     1         ' PROPAGATION FOLLOWS')
      ELSE
        WRITE(IWAVE) ISTATE,(ENOW-EREF)/EUNIT,EREF/EUNIT
        IF (LENEFV.GT.0) WRITE(IWAVE) (EFV(IEFV),IEFV=0,NEFVP)
      ENDIF

      RETURN
C =========================================================== END OF WVCURR
      ENTRY WVGRID(RBSEG,RESEG,DRSEG,IPRSEG,NSEG,NPOINT)
C  INFORMATION ABOUT THE PROPAGATION AND THE TOTAL NUMBER OF POINTS

      IF (IWAVEF .AND. IWVSTP.GT.0) THEN
        WRITE(IWAVE,5010) 'NUMBER OF PROPAGATION SEGMENTS: ',NSEG
 5010   FORMAT('# ',A,I3)
        WRITE(IWAVE,5020)
 5020   FORMAT('# ',9X,'RST',17X,'REND',16X,'DR',11X,'IPROP')
        WRITE(IWAVE,5030) (RBSEG(ISEG),RESEG(ISEG),DRSEG(ISEG),
     1                    IPRSEG(ISEG),ISEG=1,NSEG)
 5030   FORMAT(('#',1P,3(G20.13,1X),0P,I3))
        WRITE(IWAVE,5040) 'TOTAL NUMBER OF POINTS IS ',NPOINT
 5040   FORMAT('# ',A,I10)
      ELSEIF (.NOT.IWAVEF) THEN
        WRITE(IWAVE) NSEG
        WRITE(IWAVE) (RBSEG(ISEG),RESEG(ISEG),DRSEG(ISEG),
     1               IPRSEG(ISEG),ISEG=1,NSEG)
        WRITE(IWAVE) NPOINT
      ENDIF

      RETURN
C =========================================================== END OF WVGRID
      ENTRY WVOPEN(NBASIS)
C  OPEN SCRATCH FILES USED FOR STORING WAVEFUNCTION AND PROPAGATION
C  MATRICES

      OPEN(UNIT=IPSISC,FORM='UNFORMATTED',ACCESS='DIRECT',
     1     RECL=8*(NBASIS+1),STATUS='SCRATCH')
      OPEN(UNIT=IWAVSC,FORM='UNFORMATTED',ACCESS='DIRECT',
     1     RECL=8*(NBASIS*NBASIS+1),STATUS='SCRATCH')

      RETURN
C =========================================================== END OF WVOPEN
      END
